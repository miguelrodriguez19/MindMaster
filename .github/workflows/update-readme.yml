name: Update README and Release

on:
  push:
    branches:
      - master
      - develop

jobs:
  update-readme-and-release:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Java's configuration to read Gradle
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      # 3. Grant execute permission to gradlew
      - name: Grant execute permission to gradlew
        run: chmod +x ./gradlew

      # 4. Build and validate
      - name: Run Gradle build
        run: ./gradlew clean build --stacktrace

      # 5. Extract versionName from build.gradle
      - name: Extract versionName
        id: extract_version
        run: |
          VERSION_NAME=$(./gradlew -q printVersionName)
          echo "Extracted VERSION_NAME=$VERSION_NAME"
          echo "VERSION_NAME=$VERSION_NAME" >> $GITHUB_ENV

      # 6. Update README.md with the extracted version
      - name: Update README.md with version
        run: |
          if [ "${{ github.ref }}" == "refs/heads/develop" ]; then
              sed -i "s|\\[VERSION\\](.*)|[VERSION](https://img.shields.io/badge/Version-$VERSION_NAME_beta-blue)|" README.md
          else
              sed -i "s|\\[VERSION\\](.*)|[VERSION](https://img.shields.io/badge/Version-$VERSION_NAME-blue)|" README.md
          fi
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add .
          git commit -m "Update README.md and version files with version $VERSION_NAME" || echo "No changes to commit"
          git push || echo "Nothing to push"

      # 7. Create Git Tag
      - name: Create Git Tag
        if: success()
        run: |
          if [ "${{ github.ref }}" == "refs/heads/develop" ]; then
              git tag -a "v$VERSION_NAME_beta" -m "Beta release v.$VERSION_NAME"
              git push origin "v$VERSION_NAME_beta"
          else
              git tag -a "v$VERSION_NAME" -m "Release version $VERSION_NAME"
              git push origin "v$VERSION_NAME"
          fi

      # 8. Create GitHub Release
      - name: Create GitHub Release
        if: ${{ github.ref == 'refs/heads/master' }}
        uses: actions/create-release@v1
        with:
          tag_name: "v$VERSION_NAME"
          release_name: "Release v$VERSION_NAME"
          body: |
            ## What's New
            - Updated version to $VERSION_NAME
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
